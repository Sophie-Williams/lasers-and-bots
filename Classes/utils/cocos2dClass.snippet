<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Cocos2d Class</Title>
      <Shortcut>ccclass</Shortcut>
      <Description>Code snippet for a Cocos2d class</Description>
      <Author>Newolds</Author>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
        <SnippetType>SurroundsWith</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>header</ID>
          <ToolTip>Header</ToolTip>
          <Default>__MY_CLASS__</Default>
        </Literal>
        <Literal>
          <ID>name</ID>
          <ToolTip>Class name</ToolTip>
          <Default>MyClass</Default>
        </Literal>
        <Literal>
          <ID>parent</ID>
          <ToolTip>Parent class</ToolTip>
          <Default>Node</Default>
        </Literal>
      </Declarations>
      <Code Language="cpp"><![CDATA[#ifndef $header$
        #define $header$

        #include "../utils/utils.h"

        class $name$ : public $parent$
        {
        public:
            // parent
            typedef $parent$ parent;

            // constructor
            $name$();

            // destructor
            ~$name$();

            // create the object
            static $name$* create();

            // init this object
            virtual bool init();

        protected:
            $selected$ $end$
        private:

        };

        #endif // $header$

        #include "$name$.h"

        $name$::$name$()
        {
        }

        $name$::~$name$()
        {
        }

        $name$* $name$::create()
        {
            $name$* ret = nullptr;

            do
            {
                auto object = new $name$();
                UTILS_BREAK_IF(object == nullptr);

                if (object->init())
                {
                    object->autorelease();
                }
                else
                {
                    delete object;
                }

                ret = object;
            } while (0);

            // return the object
            return ret;
        }

        // on "init" you need to initialize your instance
        bool $name$::init()
        {
            bool ret = false;

            do
            {
                //////////////////////////////
                // 1. super init first
                UTILS_BREAK_IF(!parent::init());

                ret = true;

            } while (0);

            return ret;
        }]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>
